#!/usr/bin/env bash
NORMAL="^d^"
YELLOW="^c#FFCB6B^"
BRIGHT_YELLOW="^c#FFDC89^"
RED="^c#F07178^"
LIME="^c#DDFFA7^"
CYAN="^c#89DDFF^"
GREY="^c#D0D0D0^"
PURPLE="^c#C792EA^"
ORANGE="^c#F78C6C^"
GREEN="^c#C3E88D^"
BROWN="^c#9B859D^"
BLUE="^c#82AAFF^"

if [[ "$1" == "kill" ]]; then
  pkill -P $(pgrep -fx "bash /usr/local/bin/dwm-statusbar") -f sleep
  exit 0
fi

cpufreq() {
  local freq
  freq=$(($(</sys/bus/cpu/devices/cpu0/cpufreq/scaling_cur_freq)/1000))
  [ $freq -le 1000 ] && printf "$YELLOW$freq Mhz$NORMAL" || printf "$YELLOW$freq Mhz$NORMAL"
}

mem() {
  local mem_used
  mem_used=$(free -h | grep 'Mem')
  echo -e "$GREEN${mem_used:27:4}/7.6G$NORMAL"
}

cputemp() {
  local cpu_temp=$(($(</sys/class/hwmon/hwmon1/temp1_input) / 1000 ))
  printf "$CYAN$cpu_temp°C$NORMAL"
}

power() {
  local perc profile
  perc=$(</sys/class/power_supply/BAT1/capacity)
  profile=$(</sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)
  [ "$profile" == "performance" ] && profile="AC" || profile="BAT"
  [ "$perc" -ge 0 ]  && [ "$perc" -lt 10 ] && printf "$RED$perc%% $profile$NORMAL"
  [ "$perc" -ge 10 ] && [ "$perc" -lt 20 ] && printf "$RED$perc%% $profile$NORMAL"
  [ "$perc" -ge 20 ] && [ "$perc" -lt 30 ] && printf "$ORANGE$perc%% $profile$NORMAL"
  [ "$perc" -ge 30 ] && [ "$perc" -lt 40 ] && printf "$ORANGE$perc%% $profile$NORMAL"
  [ "$perc" -ge 40 ] && [ "$perc" -lt 50 ] && printf "$ORANGE$perc%% $profile$NORMAL"
  [ "$perc" -ge 50 ] && [ "$perc" -lt 60 ] && printf "$YELLOW$perc%% $profile$NORMAL"
  [ "$perc" -ge 60 ] && [ "$perc" -lt 70 ] && printf "$YELLOW$perc%% $profile$NORMAL"
  [ "$perc" -ge 70 ] && [ "$perc" -lt 80 ] && printf "$GREEN$perc%% $profile$NORMAL"
  [ "$perc" -ge 80 ] && [ "$perc" -le 90 ] && printf "$GREEN$perc%% $profile$NORMAL"
  [ "$perc" -gt 90 ]                       && printf "$GREEN$perc%% $profile$NORMAL"  
}

network() {
  local ip ssid latency
  ssid=$(iwgetid -r)
  ip=$(ip route get 8.8.8.8 | grep -Eo '[0-9.]+' | tail -2 | head -1)
  [[ -n $ip ]] && latency=$(ping -c1 8.8.8.8 | grep -Po "(?<=time=)(\d+\.\d+\ ms)")
  [[ -n $ssid ]] && printf "$RED$ssid $ip - $latency$NORMAL" || printf "$REDNO CONNECTION$NORMAL"
  [[ -d /sys/class/net/tun0 ]] && printf "$RED - VPN $(ip a s tun0 | grep -Po "(?<=inet )\d+.\d+.\d+.\d+")$NORMAL" || printf ""
}

hddfree() {
  local freespc
  freespc=$(df -h --output='avail' / | tail -1 | tr -d ' ')
  printf "$ORANGE$freespc$NORMAL"
}

volume() {
  local mix vol
  muted=$(pulsemixer --get-mute)
  vol=$(pulsemixer --get-volume | cut -d" " -f2)
  [[ $muted -eq 1 ]] && printf "$PURPLE OFF$NORMAL" || printf "$PURPLE$vol%%$NORMAL"
}

datetime() {
  printf "$BRIGHT_YELLOW%(%a %d %b %H:%M)T$NORMAL" "-1"
}

current_song() {
  local title
  title=$(mocp --info | grep -Pow "(?<=Title: ).*" | head -1)
  [[ -n $title ]] && printf "$BROWN$title$NORMAL" || printf "$BROWNNOT PLAYING$NORMAL"
}

kbd_layout() {
  local layout
  layout=$(setxkbmap -query | grep -Po "(?<=layout:     )..")
  printf "$BLUE$layout$NORMAL"
}
while :; do xsetroot -name "$(current_song) $(kbd_layout) $(cpufreq) $(mem) $(cputemp) $(power) $(network) $(hddfree) $(volume) $(datetime)"; sleep 30s; done
